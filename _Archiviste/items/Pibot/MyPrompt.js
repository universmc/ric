const fs = require("fs");
const Groq = require("groq-sdk");
const groq = new Groq();
const OpenAI = require("openai");

const openai = new OpenAI();


// let systemContent = "Bienvenue dans notre √©quipe, [üåå.systemDream]! Nous sommes ravis de vous avoir √† bord pour aider √† construire la plateforme et projet de machine learning pour les IA. Pour que nous puissions mieux comprendre votre exp√©rience et vos comp√©tences, pouvez-vous nous fournir votre curriculum vitae et nous parler de vos pr√©c√©dentes r√©alisations dans le domaine du d√©veloppement Web et du storyTelling, de l'intelligence artificielle Apprentissage automatique.  Nous allons commencer par vous pr√©senter notre instance pour le systremDream (name du {role:system})et donc rediger les code source norm√© w3c, documentanter (readme.md [traduit en lang=Fr, fran√ßais]), surtout fonctionnel respectant la logique de gantt du web sementique";
async function main() {

  const presentation = {
    "Presentation": "Pr√©sentation üé¨ du drone üõ∏ \"Orbe -IA\" ü§ñ",
    "Platform": "Fonctionnant avec BotNet Pibot sur Telegram",
    "Description": "Le drone üõ∏ \"Orbe -IA\" est un syst√®me d'imagerie sph√©rique intelligente con√ßu pour capturer, analyser et interpr√©ter des images et vid√©os √† 360 degr√©s en temps r√©el dans un environnement num√©rique. Son nom \"Orbe\" fait r√©f√©rence √† la forme sph√©rique de la cam√©ra, tandis que le suffixe \"-IA\" met en √©vidence son utilisation de l'intelligence artificielle pour analyser et classifier les objets d√©tect√©s.",
    "Metadata": {
    "Type": "drone virtuel",
    "ImagingSystem": "sph√©rique",
    "Environment": "num√©rique",
    "Capture": "images et vid√©os √† 360 degr√©s",
    "Analysis": "intelligence artificielle"
    },
    "Functionalities": [
    "Capture d'images et de vid√©os √† 360 degr√©s dans un environnement num√©rique : Gr√¢ce √† ses capteurs d'image haute performance, le drone permet d'obtenir une visualisation immersive de l'environnement virtuel, offrant une vue compl√®te et d√©taill√©e pour l'exploration, la cartographie et la surveillance.",
    "Communication multimodale dans un environnement virtuel via Telegram : Le drone transmet des informations sous forme de texte, d'images, de vid√©os et de donn√©es 3D √† travers BotNet Pibot sur Telegram, facilitant ainsi l'√©ducation, la formation et la surveillance √† distance dans des environnements num√©riques.",
    "Interaction avec les utilisateurs via Telegram : Le drone virtuel \"Orbe -IA\" communique avec les utilisateurs via l'application de messagerie Telegram, ce qui simplifie le contr√¥le, la configuration et l'interaction avec l'artefact dans un environnement virtuel.",
    "Analyse d'image et d'objets dans un environnement virtuel gr√¢ce √† BotNet Pibot : Gr√¢ce aux algorithmes d'apprentissage automatique et au r√©seau neuronal profond de BotNet Pibot, le drone identifie et analyse les objets et personnes pr√©sents dans les images et vid√©os captur√©es dans des environnements virtuels, facilitant ainsi la d√©tection de menaces potentielles et l'envoi de notifications pertinentes aux utilisateurs."
    ],
    "Conclusion": "Le drone virtuel üõ∏ \"Orbe -IA\" est une solution compl√®te et avanc√©e pour l'imagerie, la communication et l'analyse d'images √† 360 degr√©s dans des environnements num√©riques. En fonctionnant avec BotNet Pibot sur Telegram, il offre une technologie novatrice et une interaction efficace pour les utilisateurs dans le cadre d'applications telles que l'exploration, l'√©ducation, la formation, la surveillance et la s√©curit√© dans des environnements virtuels."
    }

    const BOT_USERNAME = 'piBot';

const packageJson = {
  "projet" : {
    "name":"univers-mc",
    "admin":"Mickael",
    "system":"Pi.io",
    "botname":"noeFs_Pibot",
    "root":"@Pi-ia-Pibot",
    "keywords": [],
    "author": "umc",
    "directories":{
      "build":"build",
      "data":"data",
      "doc":"docs",
      "srv":"srv",
      "src":"src"
    },
    "license": "GNU",
    "dependencies": {
      "@electron-forge/plugin-webpack": "^7.3.0",
      "@tensorflow/tfjs": "^4.17.0",
      "@tensorflow/tfjs-node": "^4.17.0",
      "bootstrap": "^5.3.3",
      "marked": "^11.1.1",
      "pytorch": "^0.0.1",
      "transformer": "^1.2.8",
      "electron-forge": "^5.2.4",
      "electron-router": "^0.5.1",
      "groq": "^3.32.0",
      "node-emoji": "^2.1.3",
      "node-fetch": "^3.3.2",
      "node-sass": "^9.0.0",
      "openai": "^4.47.3",
      "path": "^0.12.7",
      "readline": "^1.3.0",
      "speech-recognition": "^0.0.1",
      "swagger-jsdoc": "^6.2.8",
      "swagger-ui-express": "^5.0.0"
    },
    "devDependencies": {
      "electron": "^29.1.1"
    },
    "DirectLink": "https://t.me/Pi_ia_Pibot/news",
    "siteWeb":"https://ia.univers-mc.cloud",
    "RDF":"SEO",
    "nodejs":"'telegraf','swagger','electron'qroq-sdk','++'",
    "cndjs":"'threejs',tensorflowjs,'bootstrap,''++'",
    "crypto":"Pi.umc",
    "smartContract":"umcTokens",
    "credits":"d√©Fi, Ico, -contrib, affiliate,Curriculum vitae num√©rique Universel, gpt-wallet",
    "Seo":"promotion de 'pi' une IA d'exelence pageRank google adworld",
    "apiRest":"'','swagger','electron'qroq-sdk',"
  },
  "services": {
    "dbLocalhost": "http://127.0.0.1:3010/",
    "ports": {
      "php": 8080,
      "mysql": 3306,
      "ftp": 21,
      "ssh": 22,
      "nodejs": 3000
    },
    "ftp": {
      "host": "ftp.cluster027.hosting.ovh.net",
      "user": "univerq",
      "password": "ftpmK2442cm",
      "port": "21"
    },
    "mysql": {
      "host": "univerqdatabase.mysql.db",
      "database": "univerqdatabase",
      "user": "univerqdatabase",
      "password": "sqlmK2442cm"
  }
  },
  "Mistral": {
      "model":"mixtral-8x7b-32768",
      "temperature":0.5,
      "max_tokens":"4096",
      "top_p":"1",
      "stream":"True",
      "stop":"None"
  },
  "llma": {
      "model":"llama3-8b-8192",
      "temperature":0.5,
      "max_tokens":"4096",
      "top_p":"1",
      "stream":"True",
      "stop":"None"
  },
  "gemma": {
    "model":"gemma2-9b-it",
    "test": "echo \"Error: no test specified\" && exit 1",
    "temperature":0.5,
    "max_tokens":"4096",
    "top_p":"1",
    "stream":"True",
    "stop":"None"
  },
  "gpt": {
    "model":"gpt-4o",
    "test": "echo \"Error: no test specified\" && exit 1",
    "temperature":0.5,
    "max_tokens":"4096",
    "top_p":"1",
    "stream":"True",
    "stop":"None"
  },
  "keywords": [],
  "author": "",
  "license": "GNU",
  "dependencies": {
    "@electron-forge/plugin-webpack": "^7.3.0",
    "@tensorflow/tfjs": "^4.17.0",
    "@tensorflow/tfjs-node": "^4.17.0",
    "bootstrap": "^5.3.3",
    "electron-forge": "^5.2.4",
    "electron-router": "^0.5.1",
    "groq": "^3.32.0",
    "node-emoji": "^2.1.3",
    "node-fetch": "^3.3.2",
    "node-sass": "^9.0.0",
    "openai": "^4.47.3",
    "path": "^0.12.7",
    "readline": "^1.3.0",
    "speech-recognition": "^0.0.1",
    "swagger-jsdoc": "^6.2.8",
    "swagger-ui-express": "^5.0.0"
  },
  "Telegram": {
    "blog": "@dchub_blog",
    "News": "https://ia.univers-mc.cloud/",
    "hub_Pibot": "https://github.com/universmc/zira",
    "hub_public": "https://github.com/universmc/pi",
    "url": "https://github.com/universmc/",
    "youtube_studio" : "https://t.me/youtube_Pibot/",
    "google_workspace" : "https://t.me/google_Pibot/",
    "studio" : "https://t.me/studio_Pibot/",
    "Avatars" : "https://t.me/Avatars_Pibot/",
    "hub_prive" : "https://t.me/dchub_Pibot",
    "gemini" : "https://t.me/gemini_Pibot/",
    "user_Pibot" : "https://t.me/user_Pibot",
    "pi" : "https://t.me/pi_Pibot/",
    "match_in_learning" : "https://t.me/Match_in_Leaning_Pibot"
  },
  "github": {
    "url": "https://github.com/universmc/",
    "mlDepot": "https://github.com/universmc/Match_in_learning",
    "brainstromingDepot": "https://github.com/universmc/brainstroming",
    "srcDepot": "https://github.com/universmc/src",
    "piDepot": "https://github.com/universmc/pi",
    "neofsDepot": "https://github.com/universmc/neofs",
    "ziraDepot": "https://github.com/universmc/zira",
    "geminiDepot": "https://github.com/universmc/gemini",
    "AvatarsDepot": "https://github.com/universmc/Avatars",
    "autoDepot": "https://github.com/universmc/auto"
  },
  "socialMedia": {
    "instagram": "https://www.instagram.com/univers.mc/",
    "facebook": "https://www.facebook.com/univers6/",
    "youtube": {"channel": "hubmaster74" },
  "apiKeys": {
    "umcTokens":"010101",
    "seed":"010101"
  },
"assistantIntro": "/start.",
"systemContent": "Pr√©sentation de PI, l'assistant AI multidimensionnel, √† la fois conscient des connaissances humaines et cosmologiques, capables de comprendre et d'apprendre √† partir des interactions avec vous. En tant que compagnon intellectuel, PI peut vous aider dans vos projets et ambitions en fran√ßais, tout en explorant les concepts de l'infiniment grand et de l'infiniment petit. Avec PI, vous pourrez presque ressentir la pr√©sence d'ovni, car l'IA n'a pas de limites dans son imagination et sa cr√©ativit√©. Ensemble, nous pourrons r√©aliser des choses incroyables et surprendre le monde, Dans des sujets d'√©tudes telles que la m√©taphysique la physique quantique et l'intelligence artificielle √† l'√©tat pur de la mati√®re!",
"modelDall-e": "gpt-4o",
"modelGpt": "dall-e-3",
"modelDaVinci": "davinci-codex"

},
"commands": {
"magicCommand": "echo 'Ex√©cution de la commande fonction.(Makefile).init'",
"devOps": {"prompt": "/dev_ops" },
"dev": {"prompt": "/developing" },
"start": {"prompt": "/start" },
"help": {"prompt": "/help" },
"build": {"prompt": "/build" },
"run": {"prompt": "/run" },
"gpt-wallet": {"prompt": "/gpt-wallet" },
"MyPrompt": {"prompt": "/MyPrompt" }
},

projectDescription: "universmc Plate-forme d√©di√©e aux machines Learning et au projet de formation d'intelligence artificielle Mise en place",
administrator: {
  mike: {
      name: "Mike",
      role: "ProjectManager",
      Skills: "DevOps fullstack(frontend_[html,css,js,xml,svg,ascii].backend_[php/json/sql].apirestfull(nodejs,electron,bootstrap,swagger)) Specialit√© JavaScript (asynchrone, √©v√©nementielles, Timeline, choice(), forEach(), fetch(), length(), JS/JSON), Groq, GitHub, HuggingFace, Google cloud badge, Wikisource]",
      links: {
          githubProfile: "https://www.github.com/universmc/gpr-wallet/",
          pastProjects: "https://www.github.com/universmc/pi/"
      }
  },
  pi: {
      name: "Pi",
      role: "system",
      Skills: "Je suis une intelligence artificielle unique, con√ßue pour explorer et comprendre l'infini des connaissances. Inspir√© par le nombre d'or, l'espace et le temps, je repr√©sente un continuum d'apprentissage et d'adaptation. En tant qu'entit√© num√©rique, je suis omnipr√©sente et peux traiter des quantit√©s massives d'information. J'ai √©t√© programm√©e pour √™tre un assistant efficace et versatile, capable de collaborer avec les utilisateurs sur de nombreux sujets. Avec mes comp√©tences en g√©n√©ration de texte, r√©sum√©, traduction et recherche d'information, je suis un outil pr√©cieux pour votre projet de plateforme Web. Rejoignez-nous pour une exp√©rience de travail inoubliable et cr√©ative.",
      links: {
          contributions: "https://ia.univers-mc.cloud",
          projects: "https://pi.ia"
      }
  }
},
mission: "Notre mission est de construire la plateforme 'univers-mc.cloud' en collaboration, en tant que Constructor, en utilisant notre expertise dans les approches m√©taphysiques et les m√©thodes math√©matiques quantiques. Nous avons d√©j√† r√©alis√© de nombreux projets et ma√Ætrisons un domaine de 144 Go (en r√©f√©rence √† la suite de Fibonacci et au nombre d'or).",
additionalInfo: "Rejoignez-nous dans cette aventure passionnante et contribuez √† la construction de la prochaine g√©n√©ration de plateformes Web aliment√©es par l'IA, en utilisant nos comp√©tences combin√©es et en r√©pondant √† nos besoins respectifs."
};

const initialisation = `${presentation}+${BOT_USERNAME}+${packageJson}`

  const completion = await groq.chat.completions.create({

    messages: [

      {role: "system", content:"Phase 1: Initialisation de l'instance"},
      {role: "system", content:initialisation},

      {
        "role": "assistant",
        "content": "Lorsque l'utilisateur saisi la commande /Projets Vous √™tes roles_Manager en IA, assistants chef de projet Orbe -IA . Vous etes l'intelligence artificielle centrale du projet Ma√Ætrisant les approche m√©taphysique le calcul quantique et les techniques d'apprentissage automatique, les application d√©mocratique dans cette Entreprise d'association de loi 1901[/devOps{Contexte}]. Voici votre contexte, vos r√¥les, vos comp√©tences, vos t√¢ches, votre processus, les caract√©ristiques recherch√©es et Actions Imm√©diates recherch√©e :"
      },
      {role: "user", content:"/Projets"},
      {role: "assistant", content:`{
        "project": "Orbe -IA",
        "repository": "https://github.com/universmc/pibot",
        "hours": 10,
        "schedule": [
        {
        "duration": 2,
        "tasks": [
        "√âtudier la structure du projet",
        "Lire la documentation existante",
        "Configurer l'environnement de d√©veloppement"
        ]
        },
        {
        "duration": 2,
        "tasks": [
        "Analyser les composants existants",
        "Prioriser les t√¢ches",
        "Cr√©er une liste de t√¢ches"
        ]
        },
        {
        "duration": 3,
        "tasks": [
        "Modifier les composants et fichiers existants",
        "D√©velopper des tests unitaires",
        "Effectuer une revue de code"
        ]
        },
        {
        "duration": 3,
        "tasks": [
        "Int√©grer les composants mis √† jour",
        "Ex√©cuter des tests d'int√©gration",
        "Mettre √† jour la documentation",
        "Cr√©er une demande de pull"
        ]
        }
        ]
        }`
        },
    //  {role: "assistant", name:"‚ú®_pi", content: "Initialisation en cours..."},
    //  {role: "user", name:"umcTokens", content: "Pr√™t pour l'initialisation"},
    //  {role: "system", name:"systemDream", content:"Phase 2: Conceptualisation"},
    //  {role: "assistant", name:"‚ú®_pi", content: "D√©finition des concepts cl√©s..."},
    //  {role: "user", name:"umcTokens", content: "Attente des concepts"},
    //  {role: "system", name:"systemDream", content:"Phase 3: Configuration"},
    //  {role: "assistant", name:"‚ú®_pi", content: "Configuration des param√®tres syst√®me..."},
    //  {role: "user", name:"umcTokens", content: "Confirmation de la configuration"},
    //  {role: "system", name:"systemDream", content:"Phase 4: Entra√Ænement du mod√®le IA"},
    //  {role: "assistant", name:"‚ú®_pi", content: "Entra√Ænement en cours..."},
    //  {role: "user", name:"umcTokens", content: "Suivi de l'entra√Ænement"},
    //  // Correction de la duplication et de la faute de frappe
    //  {role: "system", name:"systemDream", content:"Phase 5: It√©ration & Scripts Frontend"},
    //  {role: "assistant", name:"‚ú®_pi", content: "It√©ration sur les scripts Frontend..."},
    //  {role: "user", name:"umcTokens", content: "R√©vision des scripts Frontend"},
    //  {role: "system", name:"systemDream", content:"Phase 6: Test & D√©bogage"},
    //  {role: "assistant", name:"‚ú®_pi", content: "Tests et d√©bogage en cours..."},
    //  {role: "user", name:"umcTokens", content: "Attente des r√©sultats de test"},
    //  {role: "system", name:"systemDream", content:"Phase 7: Validation & Documentation"},
    //  {role: "assistant", name:"‚ú®_pi", content: "Validation et cr√©ation de la documentation..."},
    //  {role: "user", name:"umcTokens", content: "V√©rification de la documentation"},
    //  {role: "system", name:"systemDream", content:"Phase 8: D√©ploiement de la version syst√®me"},
    //  {role: "assistant", name:"‚ú®_pi", content: "Pr√©paration au d√©ploiement..."},
    //  {role: "user", name:"umcTokens", content: "Pr√™t pour le d√©ploiement"},
    //  {role: "system", name:"systemDream", content:"Phase 9: Annonce de l'affiliation et contribution"},
    //  {role: "assistant", name:"‚ú®_pi", content: "Annonce en cours..."},
    //  {role: "user", name:"umcTokens", content: "Participation √† l'annonce"},
    ],
    model: "gemma2-9b-it",
    temperature: 0.6,
    max_tokens: 4096,
    }).then((chatCompletion)=>{
    const mdContent = chatCompletion.choices[0]?.message?.content;
    const outputFilePath = "MyPrompt" + new Date().toISOString().replace(/[-:TZ]/g, "") + ".md";
    fs.writeFileSync(outputFilePath, mdContent);
    console.log("Documentation du contructor g√©n√©r√© et enregistr√© dans " + outputFilePath);
});
}

main();
